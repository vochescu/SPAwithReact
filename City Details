import React, { Component } from 'react'
import ItineraryStore from '../stores/ItineraryStore'
import {EventEmitter} from 'fbemitter'
import Itinerary from './Itinerary'
import ItineraryForm from './ItineraryForm'
import ItineraryList from './ItineraryList'

const ee = new EventEmitter()
const store = new ItineraryStore(ee)

class CityDetails extends Component {
  constructor(props){
    super(props)
    this.state = {
      itineraries : []
    }
    this.addItinerary = (itinerary) => {
      store.addOne(this.props.city.cityId, itinerary)
    }
    this.saveItinerary = (id, itinerary) => {
      store.saveOne(this.props.city.cityId, id, itinerary)
    }
    this.deleteItinerary= (id) => {
      store.deleteOne(this.props.city.cityId, id)
    }
  }
  componentDidMount(){
    store.getAll(this.props.city.cityId)
    ee.addListener('ITINERARY_LOAD', () => {
      this.setState({
        itineraries : store.content
      })
    })
  }
  render() {
    return (
      <div>
        <div>
          I am the details page for {this.props.city.cityId}
        </div>
        <h3>List of itineraries</h3>
        {
          this.state.itineraries.map((m) => 
            <Itinerary itinerary={m} onDelete={this.deleteItinerary} onSave={this.saveItinerary} cityId={this.props.city.cityId}/>
          )
        }
        <div>
        </div>
        <h3>Add a new one </h3>
          <ItineraryForm onAdd={this.addItinerary} />
        <input type="button" value="back" onClick={() => this.props.onCancel()} />
      </div>
    )
  }
}

export default CityDetails
